name: Create Release

on:
  push:
    tags:
      - 'v*'  # Trigger on tags that start with 'v'
  workflow_dispatch:

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Fetch all history for tags

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Cache Node Modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-

      - name: Install Dependencies
        run: npm install

      - name: Build Production
        run: npm run build:prod

      - name: Get Latest Tag
        id: get_latest_tag
        run: |
          LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          echo "LATEST_TAG=$LATEST_TAG" >> $GITHUB_ENV

      - name: Increment Tag Version
        id: increment_tag_version
        run: |
          TAG_VERSION="${{ env.LATEST_TAG }}"
          # Remove 'v' prefix and split into parts
          VERSION_PARTS=(${TAG_VERSION//./ })
          MAJOR=${VERSION_PARTS[0]#v}
          MINOR=${VERSION_PARTS[1]}
          PATCH=${VERSION_PARTS[2]}

          # Increment patch version
          NEW_PATCH=$((PATCH + 1))
          NEW_TAG="v${MAJOR}.${MINOR}.${NEW_PATCH}"

          echo "NEW_TAG=$NEW_TAG" >> $GITHUB_ENV

      - name: Generate Release Notes
        run: |
          echo "## Installation Instructions" > release_notes.txt
          echo "" >> release_notes.txt
          echo "To install the extension, follow these steps:" >> release_notes.txt
          echo "" >> release_notes.txt
          echo "1. Download the \`reply-guy-v${{ env.NEW_TAG }}-prod.zip\` file from the release assets." >> release_notes.txt
          echo "2. Extract the zip file to a directory of your choice." >> release_notes.txt
          echo "3. Open your browser and go to the extensions page (chrome://extensions or edge://extensions)." >> release_notes.txt
          echo "4. Enable 'Developer mode' at the top right corner." >> release_notes.txt
          echo "5. Click on 'Load unpacked' and select the extracted directory." >> release_notes.txt
          echo "" >> release_notes.txt
          echo "The extension should now be installed and ready to use." >> release_notes.txt

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.NEW_TAG }}
          release_name: Release ${{ env.NEW_TAG }}
          draft: false
          prerelease: false

      - name: Upload Build to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/chrome-mv3-prod.zip
          asset_name: reply-guy-v${{ env.NEW_TAG }}-prod.zip
          asset_content_type: application/zip

      - name: Upload Installation Instructions to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release_notes.txt
          asset_name: reply-guy-v${{ env.NEW_TAG }}-release-notes.txt
          asset_content_type: text/plain